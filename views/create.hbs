 <div class="container maincontent">
    <div id="app">
        <form class="formContainer">
            <div v-if="errors.length" class="alert alert-danger">                
                <b>Por favor, corrija el(los) siguiente(s) error(es):</b>
                <ul>                
                <li v-for="error in errors">${ error }</li>
                </ul>
            </div>

            <div class="form-group row">
                <label class="col-sm-2" for="inputName">Nombre</label>
                <div class="form-group col-sm-10">                
                <input type="name" v-model="name" class="form-control" id="inputName" placeholder="name">
                </div>
            </div>
            <div class="form-group row">
                <label class="col-sm-2" for="inputEmail4">Email</label>
                <div class="form-group col-md-6">                
                <input type="email" v-model="email" class="form-control" id="inputEmail4" placeholder="Email">
                </div>
            </div>
            <div class="form-group row">
                <label  class="col-sm-2" for="inputPuesto">Puesto</label>
                <div class="form-group col-sm-10">      
                <input type="puesto" v-model="puesto"class="form-control" id="inputPuesto" placeholder="">
                </div>
            </div>
            <div class="form-group row">
                <label  class="col-sm-2" for="inputNacimiento">Fecha de nacimiento</label>
                <div class="form-group col-sm-10">      
                <input type="date" v-model="fechanacimiento" class="form-control" id="inputNacimiento" required pattern="[0-9]{4}-[0-9]{2}-[0-9]{2}">
                </div>
            </div>
            <div class="form-group row">            
                <label  class="col-sm-2" for="inputDireccion">Direcci칩n</label>
                <div class="form-group col-sm-10">      
                    <input type="input" v-model="direccion" class="form-control" id="inputDireccion">
                </div>
            </div>
            <div class="form-group row">
                <label  class="col-sm-2" for="inputDireccion">Skills:</label>
                <div class="form-group col-sm-4">      
                    <select v-model="skillSelected" class="form-select">
                    <option v-for="skill in skills" v-bind:value="skill.id">
                        ${ skill.name }
                    </option>
                    </select>                    
                </div>
                <div class="form-group col-sm-4">      
                    <button type="button" @click="addSkill" class="btn btn-primary">+</button>
                </div>
            </div>
            <div class="form-group row"> 
                <div class="form-group col-sm-6">                     
                    <button v-for="skill in skillstoSave" v-bind:value="skill.id" type="button" class="btn btn-secondary skill-btn">${ skill.name }</button>  
                </div>    
                <div class="form-group col-sm-6">  
                </div>    
            </div>
            
            <div class="form-group row">
                <div class="form-group col-sm-12">                     
                 <button type="button" @click="send" class="btn btn-primary skillItem">Crear</button>
                </div>
            </div>
            </form>

    </div>
</div>

   <script src="https://unpkg.com/vue"></script>  
   <script src="https://unpkg.com/axios/dist/axios.min.js"></script>

    <script>
      const url = "http://localhost:8080/api/skills";

      const vm = new Vue({
              delimiters: ['${', '}'],
              el: '#app',
              data: {
                skillSelected: 1,
                skills: [],
                skillstoSave: [],
                name:'',
                direccion:'',
                puesto:'',
                fechanacimiento:'',
                email:'',
                errors: []
                },
                mounted() {
                    axios.get(url).then(response => {
                        this.skills = response.data
                    })
                },
                methods: {
                    addSkill: function (e){
                        console.log(this.skillSelected);
                        const found = this.skillstoSave.some(el => el.id === this.skillSelected);
                        if(found){
                            alert("Ese skill ya se encuentra en la lista");
                        }
                        if(!found){
                            this.skillstoSave.push(
                                {id: this.skillSelected, name:this.skills[(this.skillSelected)-1].name}
                            );
                        }
                    },
                    send: function (e){
                    
                        this.errors = [];
                        
                        if (!this.name) {
                            this.errors.push("El nombre es obligatorio.");
                        }
                        if (!this.direccion) {
                            this.errors.push("La direcci칩n es obligatoria.");
                        }
                        if (!this.puesto) {
                            this.errors.push("El puesto es obligatorio.");
                        }
                        if (!this.fechanacimiento) {
                            this.errors.push("Su Fecha de nacimiento es obligatorio.");
                        }
                        
                        if(this.skillstoSave.length < 1) { 
                            this.errors.push("Agregar al menos un skill.");
                        }

                        if (!this.email) {
                            this.errors.push('El email es obligatorio.');
                        } else if (!this.validEmail(this.email)) {
                            this.errors.push('El correo electr칩nico debe ser v치lido.');
                        }
                        //console.log(this.errors.length);


                        if (!this.errors.length) {                            
                            
                            axios.post('/empleados/', {
                                    name: this.name,
                                    email: this.email,
                                    direccion: this.direccion,
                                    puesto: this.puesto,
                                    fechanacimiento: this.fechanacimiento,
                                    skills: this.skillstoSave
                                })
                                .then((res) => {                                    
                                    if(res.status == "success"){
                                        //self.$router.push('/empleados');
                                        document.location = "http://localhost:8080/";
                                    }                                    
                                })
                                .catch((error) => {
                                    // error.response.status Check status code
                                }).finally(() => {
                                    //Perform action in always
                            });
                            //e.preventDefault();
                            //return;
                           
                        }                       
                                               
                    },
                    validEmail: function (email) {
                        var re = /^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/;
                        return re.test(email);
                    }
                }
            });

    </script>